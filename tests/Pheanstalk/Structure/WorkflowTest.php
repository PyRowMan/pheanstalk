<?php

namespace Pheanstalk\Structure;

use Doctrine\Common\Collections\ArrayCollection;
use PHPUnit\Framework\TestCase;

class WorkflowTest extends TestCase
{
    /** @var Workflow $workflow */
    protected $workflow;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->workflow = new Workflow('testName', 'testGroup', new ArrayCollection([]));
    }

    public function testId()
    {
        $this->assertNull($this->workflow->getId());
        $this->workflow->setId('1');
        $this->assertSame('1', $this->workflow->getId());
    }

    public function testName()
    {
        $this->workflow->setName('1');
        $this->assertSame('1', $this->workflow->getName());
    }

    public function testGroup()
    {
        $this->workflow->setGroup('1');
        $this->assertSame('1', $this->workflow->getGroup());
    }

    public function testComment()
    {
        $this->assertNull($this->workflow->getComment());
        $this->workflow->setComment('1');
        $this->assertSame('1', $this->workflow->getComment());
    }

    public function testJobs()
    {
        $this->assertTrue($this->workflow->getJobs()->isEmpty());
        $task = new Task('/bin/echo testPath', Tube::SCHEDULER_TYPE_DEFAULT);
        $job = new Job(new ArrayCollection([$task]));
        $this->workflow->setJobs(new ArrayCollection([$job]));
        $this->assertSame($job, $this->workflow->getJobs()->first());
        $this->workflow->removeJob($job);
        $this->assertTrue($this->workflow->getJobs()->isEmpty());
        $this->workflow->addJob($job);
        $this->assertSame($job, $this->workflow->getJobs()->first());
        $this->workflow->removeJob($job);
        $this->assertTrue($this->workflow->getJobs()->isEmpty());
    }

    public function testBoundToSchedule()
    {
        $this->assertNull($this->workflow->getBoundToSchedule());
        $this->workflow->setBoundToSchedule(1);
        $this->assertSame(1, $this->workflow->getBoundToSchedule());
    }

    public function testLastcommit()
    {
        $this->assertNull($this->workflow->getLastcommit());
        $this->workflow->setLastcommit(1);
        $this->assertSame(1, $this->workflow->getLastcommit());
    }

    public function testModified()
    {
        $this->assertNull($this->workflow->getModified());
        $this->workflow->setModified(1);
        $this->assertSame(1, $this->workflow->getModified());
    }

    public function testGetXml()
    {
        $task = new Task('/bin/echo testPath', Tube::SCHEDULER_TYPE_DEFAULT);
        $job = new Job(new ArrayCollection([$task]));
        $this->workflow->addJob($job);
        $this->assertInstanceOf(\DOMDocument::class, $this->workflow->getXml());
    }
}
