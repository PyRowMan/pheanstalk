<?php

namespace Pheanstalk\Structure;

use PHPUnit\Framework\TestCase;

class TimeScheduleTest extends TestCase
{
    /** @var TimeSchedule $object */
    protected $object;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->object = new TimeSchedule();
    }

    /**
     * @expectedException \Exception
     */
    public function testSecondShouldThrowExceptionWithChars()
    {
        $this->object->setSeconds(['1', 'deux', 'trois']);
    }

    /**
     * @expectedException \Exception
     */
    public function testSecondShouldThrowExceptionWithTooMuchTime()
    {
        $count = $this->getArrayOfPossibleUnits(60);
        $count[] = 1;
        $this->object->setSeconds($count);
    }

    public function testSeconds()
    {
        $count = $this->getArrayOfPossibleUnits(60);
        $this->object->setSeconds($count);
        $this->assertSame($count, $this->object->getSeconds());
    }

    /**
     * @expectedException \Exception
     */
    public function testMinutesShouldThrowExceptionWithChars()
    {
        $this->object->setMinutes(['1', 'deux', 'trois']);
    }

    /**
     * @expectedException \Exception
     */
    public function testMinutesShouldThrowExceptionWithTooMuchTime()
    {
        $count = $this->getArrayOfPossibleUnits(60);
        $count[] = 1;
        $this->object->setSeconds($count);
    }

    public function testMinutes()
    {
        $count = $this->getArrayOfPossibleUnits(60);
        $this->object->setMinutes($count);
        $this->assertSame($count, $this->object->getMinutes());
    }

    /**
     * @expectedException \Exception
     */
    public function testHoursShouldThrowExceptionWithChars()
    {
        $this->object->setHours(['1', 'deux', 'trois']);
    }

    /**
     * @expectedException \Exception
     */
    public function testHoursShouldThrowExceptionWithTooMuchTime()
    {
        $count = $this->getArrayOfPossibleUnits(24);
        $count[] = 1;
        $this->object->setHours($count);
    }

    public function testHours()
    {
        $count = $this->getArrayOfPossibleUnits(24);
        $this->object->setHours($count);
        $this->assertSame($count, $this->object->getHours());
    }

    /**
     * @expectedException \Exception
     */
    public function testDaysShouldThrowExceptionWithChars()
    {
        $this->object->setDays(['1', 'deux', 'trois']);
    }

    /**
     * @expectedException \Exception
     */
    public function testDaysShouldThrowExceptionWithTooMuchTime()
    {
        $count = $this->getArrayOfPossibleUnits(31);
        $count[] = 1;
        $this->object->setDays($count);
    }

    public function testDays()
    {
        $count = $this->getArrayOfPossibleUnits(31);
        $this->object->setDays($count);
        $this->assertSame($count, $this->object->getDays());
    }

    /**
     * @expectedException \Exception
     */
    public function testMonthsShouldThrowExceptionWithChars()
    {
        $this->object->setMonths(['1', 'deux', 'trois']);
    }

    /**
     * @expectedException \Exception
     */
    public function testMonthsShouldThrowExceptionWithTooMuchTime()
    {
        $count = $this->getArrayOfPossibleUnits(12);
        $count[] = 1;
        $this->object->setMonths($count);
    }

    public function testMonths()
    {
        $count = $this->getArrayOfPossibleUnits(12);
        $this->object->setMonths($count);
        $this->assertSame($count, $this->object->getMonths());
    }

    /**
     * @param int $units
     *
     * @return array
     */
    protected function getArrayOfPossibleUnits(int $units)
    {
        $count = [];
        for ($i = 1; $i < $units; $i++) {
            $count[] = $i;
        }

        return $count;
    }
}
