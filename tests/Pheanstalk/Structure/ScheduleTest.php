<?php

namespace Pheanstalk\Structure;

use Doctrine\Common\Collections\ArrayCollection;
use PHPUnit\Framework\TestCase;

class ScheduleTest extends TestCase
{
    /** @var Schedule $schedule */
    protected $schedule;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->schedule = new Schedule(1, new TimeSchedule());
    }

    public function testId()
    {
        $this->assertNull($this->schedule->getId());
        $this->schedule->setId(1);
        $this->assertSame(1, $this->schedule->getId());
    }

    public function testActive()
    {
        $this->schedule->setActive(true);
        $this->assertTrue($this->schedule->isActive());
    }

    public function testComment()
    {
        $this->assertNull($this->schedule->getComment());
        $this->schedule->setComment('1');
        $this->assertSame('1', $this->schedule->getComment());
    }

    public function testHost()
    {
        $this->assertNull($this->schedule->getHost());
        $this->schedule->setHost('1');
        $this->assertSame('1', $this->schedule->getHost());
    }

    public function testNode()
    {
        $this->schedule->setNode('1');
        $this->assertSame('1', $this->schedule->getNode());
    }

    public function testOnFailure()
    {
        $this->schedule->setOnFailure('1');
        $this->assertSame('1', $this->schedule->getOnFailure());
    }

    public function testSchedule()
    {
        $timeSchedule = new TimeSchedule();
        $this->schedule->setSchedule($timeSchedule);
        $this->assertSame($timeSchedule, $this->schedule->getSchedule());
    }

    public function testUser()
    {
        $this->assertNull($this->schedule->getUser());
        $this->schedule->setUser('1');
        $this->assertSame('1', $this->schedule->getUser());
    }

    public function testWorkflow()
    {
        $this->schedule->setWorkflow(1);
        $this->assertSame(1, $this->schedule->getWorkflow());
    }
}
